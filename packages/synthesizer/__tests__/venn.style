canvas {
  width = 800
  height = 700
}

Colors {
    darkpurple = rgba(0.549,0.565,0.757, 0.2)
    black = rgba(0.0, 0.0, 0.0, 1.0)
}


forall Set x {
    x.icon = Circle {
        strokeWidth : 1.0
        strokeColor : Colors.black
        fillColor: Colors.darkpurple
    }

    x.text = Equation {
        string : x.label
        fontSize: "25px"
    }

    ensure contains(x.icon, x.text)
    encourage sameCenter(x.text, x.icon)
    x.textLayering = x.text above x.icon
}


forall Set x; Set y
where IsSubset(x, y) {
    x.subsetFn1 = ensure disjoint(y.text, x.icon, 10.0)
    x.subsetFn2 = ensure contains(y.icon, x.icon)
    x.icon above y.icon
}


-- NOTE: ideally, I would like to delete one of the shapes, or somehow make them synonymous. But deleting a shape doesn't delete all the constraints and computations that refer to them, so I'd need to delete them, too. In this case, I'm making the two tranparent circles equal and making one label an empty string
forall Set x
with Set y
where Equal(x, y) {
    override y.text.string = " "
    override x.text.string = x.label + "=" + y.label
    override x.icon.r = y.icon.r
    override x.icon.center = y.icon.center
}

-- NOTE: since Style doesn't know `Equal` is symmetric, there are two identical blocks to handle both cases
forall Set x, y
where Equal(x, y); IsSubset(x, y) {
    delete x.subsetFn1
    delete x.subsetFn2
}
forall Set x, y
where Equal(y, x); IsSubset(x, y) {
    delete x.subsetFn1
    delete x.subsetFn2
}