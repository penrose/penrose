canvas {
  width = 600
  height = 400
}

layout = [first, second, third]

forall Hyperedge h {
  vec2 p0 = (?, ?)
  vec2 p1 = (?, ?)
  vec2 p2 = (?, ?)
  vec2 p3 = (?, ?)
  vec2 p4 = (?, ?)
  vec2 p5 = (?, ?)
  vec2 p6 = (?, ?)
  vec2 p7 = (?, ?)
  vec2 p8 = (?, ?)
  vec2 p9 = (?, ?)
  vec2 p10 = (?, ?)
  vec2 p11 = (?, ?)
  vec2 p12 = (?, ?)
  vec2 p13 = (?, ?)
  vec2 p14 = (?, ?)
  vec2 p15 = (?, ?)
  vec2 p16 = (?, ?)
  vec2 p17 = (?, ?)
  vec2 p18 = (?, ?)
  vec2 p19 = (?, ?)

  shape h.poly = Polygon {
    points: [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19]
    strokeWidth: 2.5
    strokeColor: #000
  }

  encourage perimeter(h.poly.points, true) == 0 except second
--   encourage minimal(elasticEnergy(h.poly.points, true)) except second
  encourage isEquilateral(h.poly.points, true) except second
}

forall Node n {
  vec2 n.pos = (?, ?)
  shape n.icon = Circle {
    center: n.pos
    r: 8
    fillColor: #ffffffff
    strokeColor: #000
    strokeWidth: 1
  }
  shape n.logo = Text {
    center: n.pos
    string: n.label
  }

}

forall Node n; Hyperedge h
where isIn(n, h) {
  ensure overlapping(h.poly, n.icon, 50) except first
}

forall Node n; Hyperedge h
where notIn(n, h) {
  ensure disjoint(n.icon, h.poly, 50) except first
}

forall Node n1; Node n2 {
  ensure lessThan(20, vdist(n1.pos, n2.pos)) except first
}