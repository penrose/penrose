canvas {
    width = 1200
    height = 700
}

colors {
    darkgray = #333333
    gray = #D3D3D3
    lightgray = #F5F5F5
    green = #B6DDBF
    purple = #D4CEE8
    blue = #d5e3ff
}

global {
    eventHeight = 35
    eventLabelFontSize = "14pt"
    eventFontStyle = "italic"
    periodFontSize = "16pt"
    periodFontStyle = "bold"

    fontFamily = "Garamond"
    
    topGridY = (canvas.height / 2) - 25
    topQuarterY = (canvas.height / 2) - 65
    lineY = (canvas.height / 2) - 105
    bottomGridY = -(canvas.height / 2) + 25
    startX =- (canvas.width / 2) + 50
    endX = (canvas.width / 2) - 50
    lineLength = endX - startX
    startLine = (startX, lineY)
    endLine = (endX, lineY)
    shape baseline = Line {
        start : startLine
        end : endLine
        strokeWidth : 3
        strokeColor: colors.lightgray
    }

}

forall Year y {
    y.minX = ?
    y.maxX = ?
    y.centerX = average2(y.minX, y.maxX)
    y.centerY = global.topGridY - 15
    y.icon = Text {
        center : (y.centerX, y.centerY)
        string : y.label
        fillColor : colors.darkgray
        fontSize : global.periodFontSize
        fontStyle : global.periodFontStyle
        fontFamily: global.fontFamily
    }
    y.slotBegin = Line {
        start : (y.minX,global.topQuarterY)
        end : (y.minX,global.topGridY)
        strokeWidth : 3
        strokeColor: colors.lightgray
    }
    y.slotEnd = Line {
        start : (y.maxX,global.topQuarterY)
        end : (y.maxX,global.topGridY)
        strokeWidth : 3
        strokeColor: colors.lightgray
    }
}

forall Quarter q {
    denominator = (match_total * 2)
    index = (match_id - 1) * 2
    startRatio = index / denominator
    middleRatio = (index + 1) / denominator
    endRatio = (index + 2) / denominator
    ratioX = ((match_id * 2) - 1) / (match_total * 2)
    totalSlotX = global.lineLength
    q.startSlotX = global.startX + startRatio * totalSlotX
    q.middleSlotX = global.startX + middleRatio * totalSlotX
    q.endSlotX = global.startX +endRatio * totalSlotX
    q.x = q.middleSlotX
    q.y = global.lineY + 25
    q.icon = Text {
        center : (q.x, q.y)
        string : q.label
        fillColor : colors.darkgray
        fontSize : global.periodFontSize
        fontStyle : global.periodFontStyle
        fontFamily: global.fontFamily
    }
    q.slotBegin = Line {
        start : (q.startSlotX,global.bottomGridY)
        end : (q.startSlotX,global.topQuarterY)
        strokeWidth : 3
        strokeColor: colors.lightgray
    }
    q.slotEnd = Line {
        start : (q.endSlotX,global.bottomGridY)
        end : (q.endSlotX,global.topQuarterY)
        strokeWidth : 3
        strokeColor: colors.lightgray
    }
    layer q.slotEnd above q.slotBegin
    layer q.slotEnd below global.baseline
    layer q.slotBegin below global.baseline
}

forall Quarter q1; Quarter q2
where Before(q1, q2) {
    layer q2.slotBegin above q1.slotEnd
}

forall Quarter q
where First(q,y)
with Year y {
    y.minX = q.startSlotX
}

forall Quarter q
where Last(q,y)
with Year y {
    y.maxX = q.endSlotX
}


forall Event e
where e := MkEvent(start, end, c)
with Quarter start; Quarter end; Category c {
    centerY = ?
    topBox = centerY + global.eventHeight/2
    bottomBox = centerY - global.eventHeight/2
    centerX = ((end.endSlotX - start.startSlotX) / 2) + start.startSlotX
    e.icon = Rectangle {
        height : global.eventHeight
        width : end.endSlotX - start.startSlotX
        center: (centerX, centerY)
        cornerRadius : 8
        strokeWidth : 1
        strokeColor: colors.darkgray
    }

    e.text = Text {
        string : e.label
        fontSize : global.eventLabelFontSize
        fillColor : colors.darkgray
        center : (centerX, centerY)
        fontStyle: global.eventFontStyle
        fontFamily: global.fontFamily
    }
    topWithPadding = global.lineY - 10
    ensure lessThan(topBox, topWithPadding)
    bottomWithPadding = global.bottomGridY + 10
    ensure greaterThan(bottomBox, bottomWithPadding)
    layer e.icon above end.slotEnd
    layer e.text above e.icon
}

forall Event e
where e:= MkEvent(start, end, `access`)
with Quarter start; Quarter end; Category `access` {
   e.icon.fillColor = colors.green
}

forall Event e
where e:= MkEvent(start, end, `milestone`)
with Quarter start; Quarter end; Category `milestone` {
   e.icon.fillColor = colors.purple
}

forall Event e
where e:= MkEvent(start, end, `outcome`)
with Quarter start; Quarter end; Category `outcome` {
   e.icon.fillColor = colors.blue
}


forall Event e1, e2 {
    ensure disjoint(e1.icon, e2.icon, 10.0)
}