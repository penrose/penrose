canvas {
    width = 600
    height = 600
}

layout = [manifolds, maps]

forall Manifold m {
  
  ensure isEquilateral(m.poly) in manifolds
  
  radius = 80
  length = 2 * 3.14 * radius
  area = 0.9 * 3.14 * radius * radius

--   ensure equal(perimeter(m.poly.points, true), length)
--   ensure equal(perimeter(m.poly.points, true), .8 * length)

--   ensure equal(signedArea(m.poly.points, true), area)
--   ensure equal(signedArea(m.poly.points, true), .5 * area)
  ensure equal(perimeter(m.poly.points, true), length) in manifolds

  ensure equal(signedArea(m.poly.points, true), area) in manifolds

  
  encourage equal(elasticEnergy(m.poly.points, true), 0) in manifolds
--   encourage minimal(elasticEnergy(m.poly.points, true))

--   scalar length = 1000

  -- TODO: is there a better way?
  vec2 p0 = (? in manifolds, ? in manifolds)
  vec2 p1 = (? in manifolds, ? in manifolds)
  vec2 p2 = (? in manifolds, ? in manifolds)
  vec2 p3 = (? in manifolds, ? in manifolds)
  vec2 p4 = (? in manifolds, ? in manifolds)
  vec2 p5 = (? in manifolds, ? in manifolds)
  vec2 p6 = (? in manifolds, ? in manifolds)
  vec2 p7 = (? in manifolds, ? in manifolds)
  vec2 p8 = (? in manifolds, ? in manifolds)
  vec2 p9 = (? in manifolds, ? in manifolds)
  vec2 p10 = (? in manifolds, ? in manifolds)
  vec2 p11 = (? in manifolds, ? in manifolds)
  vec2 p12 = (? in manifolds, ? in manifolds)
  vec2 p13 = (? in manifolds, ? in manifolds)
  vec2 p14 = (? in manifolds, ? in manifolds)
  vec2 p15 = (? in manifolds, ? in manifolds)
  vec2 p16 = (? in manifolds, ? in manifolds)
  vec2 p17 = (? in manifolds, ? in manifolds)
  vec2 p18 = (? in manifolds, ? in manifolds)
  vec2 p19 = (? in manifolds, ? in manifolds)
  vec2 p20 = (? in manifolds, ? in manifolds)
  vec2 p21 = (? in manifolds, ? in manifolds)
  vec2 p22 = (? in manifolds, ? in manifolds)
  vec2 p23 = (? in manifolds, ? in manifolds)
  vec2 p24 = (? in manifolds, ? in manifolds)
  vec2 p25 = (? in manifolds, ? in manifolds)
  vec2 p26 = (? in manifolds, ? in manifolds)
  vec2 p27 = (? in manifolds, ? in manifolds)
  vec2 p28 = (? in manifolds, ? in manifolds)
  vec2 p29 = (? in manifolds, ? in manifolds)
  vec2 p30 = (? in manifolds, ? in manifolds)
  vec2 p31 = (? in manifolds, ? in manifolds)
  vec2 p32 = (? in manifolds, ? in manifolds)
  vec2 p33 = (? in manifolds, ? in manifolds)
  vec2 p34 = (? in manifolds, ? in manifolds)
  vec2 p35 = (? in manifolds, ? in manifolds)
  vec2 p36 = (? in manifolds, ? in manifolds)
  vec2 p37 = (? in manifolds, ? in manifolds)
  vec2 p38 = (? in manifolds, ? in manifolds)
  vec2 p39 = (? in manifolds, ? in manifolds)
  vec2 p40 = (? in manifolds, ? in manifolds)
  vec2 p41 = (? in manifolds, ? in manifolds)
  vec2 p42 = (? in manifolds, ? in manifolds)
  vec2 p43 = (? in manifolds, ? in manifolds)
  vec2 p44 = (? in manifolds, ? in manifolds)
  vec2 p45 = (? in manifolds, ? in manifolds)
  vec2 p46 = (? in manifolds, ? in manifolds)
  vec2 p47 = (? in manifolds, ? in manifolds)
  vec2 p48 = (? in manifolds, ? in manifolds)
  vec2 p49 = (? in manifolds, ? in manifolds)
  vec2 p50 = (? in manifolds, ? in manifolds)
  vec2 p51 = (? in manifolds, ? in manifolds)
  vec2 p52 = (? in manifolds, ? in manifolds)
  vec2 p53 = (? in manifolds, ? in manifolds)
  vec2 p54 = (? in manifolds, ? in manifolds)
  vec2 p55 = (? in manifolds, ? in manifolds)
  vec2 p56 = (? in manifolds, ? in manifolds)
  vec2 p57 = (? in manifolds, ? in manifolds)
  vec2 p58 = (? in manifolds, ? in manifolds)
  vec2 p59 = (? in manifolds, ? in manifolds)
  vec2 p60 = (? in manifolds, ? in manifolds)
  vec2 p61 = (? in manifolds, ? in manifolds)
  vec2 p62 = (? in manifolds, ? in manifolds)
  vec2 p63 = (? in manifolds, ? in manifolds)
  vec2 p64 = (? in manifolds, ? in manifolds)
  vec2 p65 = (? in manifolds, ? in manifolds)
  vec2 p66 = (? in manifolds, ? in manifolds)
  vec2 p67 = (? in manifolds, ? in manifolds)
  vec2 p68 = (? in manifolds, ? in manifolds)
  vec2 p69 = (? in manifolds, ? in manifolds)
  vec2 p70 = (? in manifolds, ? in manifolds)
  vec2 p71 = (? in manifolds, ? in manifolds)
  vec2 p72 = (? in manifolds, ? in manifolds)
  vec2 p73 = (? in manifolds, ? in manifolds)
  vec2 p74 = (? in manifolds, ? in manifolds)
  vec2 p75 = (? in manifolds, ? in manifolds)
  vec2 p76 = (? in manifolds, ? in manifolds)
  vec2 p77 = (? in manifolds, ? in manifolds)
  vec2 p78 = (? in manifolds, ? in manifolds)
  vec2 p79 = (? in manifolds, ? in manifolds)
  vec2 p80 = (? in manifolds, ? in manifolds)
  vec2 p81 = (? in manifolds, ? in manifolds)
  vec2 p82 = (? in manifolds, ? in manifolds)
  vec2 p83 = (? in manifolds, ? in manifolds)
  vec2 p84 = (? in manifolds, ? in manifolds)
  vec2 p85 = (? in manifolds, ? in manifolds)
  vec2 p86 = (? in manifolds, ? in manifolds)
  vec2 p87 = (? in manifolds, ? in manifolds)
  vec2 p88 = (? in manifolds, ? in manifolds)
  vec2 p89 = (? in manifolds, ? in manifolds)
  vec2 p90 = (? in manifolds, ? in manifolds)
  vec2 p91 = (? in manifolds, ? in manifolds)
  vec2 p92 = (? in manifolds, ? in manifolds)
  vec2 p93 = (? in manifolds, ? in manifolds)
  vec2 p94 = (? in manifolds, ? in manifolds)
  vec2 p95 = (? in manifolds, ? in manifolds)
  vec2 p96 = (? in manifolds, ? in manifolds)
  vec2 p97 = (? in manifolds, ? in manifolds)
  vec2 p98 = (? in manifolds, ? in manifolds)
  vec2 p99 = (? in manifolds, ? in manifolds)

  shape m.poly = Polygon {
    points: [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32, p33, p34, p35, p36, p37, p38, p39, p40, p41, p42, p43, p44, p45, p46, p47, p48, p49, p50, p51, p52, p53, p54, p55, p56, p57, p58, p59, p60, p61, p62, p63, p64, p65, p66, p67, p68, p69, p70, p71, p72, p73, p74, p75,  p76, p77, p78, p79, p80, p81, p82, p83, p84, p85, p86, p87, p88, p89, p90, p91, p92, p93, p94, p95, p96, p97, p98, p99]
    strokeWidth: 2
    strokeColor: #000
  }
  
}

forall Manifold a; Manifold b; Map m where m := MakeMap(a, b) {
  
  -- TODO: is there a better way?
  vec2 p0 = (?, ?)
  vec2 p1 = (?, ?)
  vec2 p2 = (?, ?)
  vec2 p3 = (?, ?)
  vec2 p4 = (?, ?)
  vec2 p5 = (?, ?)
  vec2 p6 = (?, ?)
  vec2 p7 = (?, ?)
  vec2 p8 = (?, ?)
  vec2 p9 = (?, ?)
  vec2 p10 = (?, ?)
  vec2 p11 = (?, ?)
  vec2 p12 = (?, ?)
  vec2 p13 = (?, ?)
  vec2 p14 = (?, ?)
  vec2 p15 = (?, ?)
  vec2 p16 = (?, ?)
  vec2 p17 = (?, ?)
  vec2 p18 = (?, ?)
  vec2 p19 = (?, ?)
  vec2 p20 = (?, ?)
  vec2 p21 = (?, ?)
  vec2 p22 = (?, ?)
  vec2 p23 = (?, ?)
  vec2 p24 = (?, ?)
  vec2 p25 = (?, ?)
  vec2 p26 = (?, ?)
  vec2 p27 = (?, ?)
  vec2 p28 = (?, ?)
  vec2 p29 = (?, ?)
  vec2 p30 = (?, ?)
  vec2 p31 = (?, ?)
  vec2 p32 = (?, ?)
  vec2 p33 = (?, ?)
  vec2 p34 = (?, ?)
  vec2 p35 = (?, ?)
  vec2 p36 = (?, ?)
  vec2 p37 = (?, ?)
  vec2 p38 = (?, ?)
  vec2 p39 = (?, ?)
  vec2 p40 = (?, ?)
  vec2 p41 = (?, ?)
  vec2 p42 = (?, ?)
  vec2 p43 = (?, ?)
  vec2 p44 = (?, ?)
  vec2 p45 = (?, ?)
  vec2 p46 = (?, ?)
  vec2 p47 = (?, ?)
  vec2 p48 = (?, ?)
  vec2 p49 = (?, ?)
--   vec2 p50 = (?, ?)
--   vec2 p51 = (?, ?)
--   vec2 p52 = (?, ?)
--   vec2 p53 = (?, ?)
--   vec2 p54 = (?, ?)
--   vec2 p55 = (?, ?)
--   vec2 p56 = (?, ?)
--   vec2 p57 = (?, ?)
--   vec2 p58 = (?, ?)
--   vec2 p59 = (?, ?)
--   vec2 p60 = (?, ?)
--   vec2 p61 = (?, ?)
--   vec2 p62 = (?, ?)
--   vec2 p63 = (?, ?)
--   vec2 p64 = (?, ?)
--   vec2 p65 = (?, ?)
--   vec2 p66 = (?, ?)
--   vec2 p67 = (?, ?)
--   vec2 p68 = (?, ?)
--   vec2 p69 = (?, ?)
--   vec2 p70 = (?, ?)
--   vec2 p71 = (?, ?)
--   vec2 p72 = (?, ?)
--   vec2 p73 = (?, ?)
--   vec2 p74 = (?, ?)
--   vec2 p75 = (?, ?)
--   vec2 p76 = (?, ?)
--   vec2 p77 = (?, ?)
--   vec2 p78 = (?, ?)
--   vec2 p79 = (?, ?)
--   vec2 p80 = (?, ?)
--   vec2 p81 = (?, ?)
--   vec2 p82 = (?, ?)
--   vec2 p83 = (?, ?)
--   vec2 p84 = (?, ?)
--   vec2 p85 = (?, ?)
--   vec2 p86 = (?, ?)
--   vec2 p87 = (?, ?)
--   vec2 p88 = (?, ?)
--   vec2 p89 = (?, ?)
--   vec2 p90 = (?, ?)
--   vec2 p91 = (?, ?)
--   vec2 p92 = (?, ?)
--   vec2 p93 = (?, ?)
--   vec2 p94 = (?, ?)
--   vec2 p95 = (?, ?)
--   vec2 p96 = (?, ?)
--   vec2 p97 = (?, ?)
--   vec2 p98 = (?, ?)
--   vec2 p99 = (?, ?)

  shape m.poly = Polyline {
    points: [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32, p33, p34, p35, p36, p37, p38, p39, p40, p41, p42, p43, p44, p45, p46, p47, p48, p49] --, p50, p51, p52, p53, p54, p55, p56, p57, p58, p59, p60, p61, p62, p63, p64, p65, p66, p67, p68, p69, p70, p71, p72, p73, p74, p75,  p76, p77, p78, p79, p80, p81, p82, p83, p84, p85, p86, p87, p88, p89, p90, p91, p92, p93, p94, p95, p96, p97, p98, p99]
    strokeWidth: 2
    strokeColor: #000
    endArrowhead: "straight"
  }
  shape m.arrow2 = Line {
    start: p0 + 15 * normalize(p1 - p0)
    end: p1 + 15 * normalize(p1 - p0)
    strokeWidth: 1.5
    strokeColor: #000000ff
    endArrowhead: "straight"
  }
  -- shape m.arrow1 = Line {
  --   start: p48
  --   end: p49
  --   strokeWidth: 1.5
  --   strokeColor: #22a34da8
  --   endArrowhead: "straight"
  -- }
  
  ca = centerOfMass(a.poly.points)
  cb = centerOfMass(b.poly.points)
  ensure lessThan(350, vdist(ca, cb)) in manifolds

  pa = closestPoint(a.poly, p0)
  ensure equal(vdist(pa, p0), 5) in maps

  pb = closestPoint(b.poly, p49)
  ensure equal(vdist(pb, p49), 5) in maps

  ensure isEquilateral(m.poly) in maps

  -- encourage equal(perimeter(m.poly.points, false), 1 * vdist(pa, pb)) in maps
  -- encourage equal(perimeter(m.poly.points, false), 100) in maps

  -- encourage minimal(perimeter(m.poly.points, false)) in maps
  encourage equal(elasticEnergy(m.poly.points, false), 0) in maps
    -- encourage equal(pElasticEnergy(m.poly.points, false, 3), 0) in maps
    -- ensure lessThan(3.14, totalCurvature(m.poly.points, false, true)) in maps

  -- p1 = pa - 0.01 * (pa - p0)
  -- p48 = pb - 0.01 * (pb - p49)

  encourage minimal(vdist(p1, p48)) in maps

  ensure equal(vdist(pa, p0) + vdist(p0, p1), vdist(pa, p1))

    ensure equal(vdist(pb, p49) + vdist(p48, p49), vdist(pb, p48))

  -- ppa = closestPoint(a.poly, p1)
  -- ensure equal(vdist(pa, ppa), 0) in maps

  -- ppb = closestPoint(b.poly, p48)
  -- ensure equal(vdist(pb, ppb), 0) in maps

  -- ensure equal(vdist(p1, pa), ) in maps
  -- ensure equal(vdist(p48, pb), vdist(p49, pb)) in maps
  
}
