import os
from pathlib import Path
from argparse import ArgumentParser

def clean_string(text) -> str:
    "Thanks to 'Hugo' from stackoverflow: https://stackoverflow.com/a/27086669 "
    chars = "\\` *_{}[]()>#+-.!$'"
    for c in chars:
        if c in text:
            text = text.replace(c, "")
    return text


def parse_input_and_write(textData, filename: str):
    with open(filename, 'w') as f:
        f.write("--Autogenerated array substance\n\n")
        index = 1
        elIndex = 1
        for line in textData:
            arrayName = "a" + str(index)
            arrayDisplayName = "$Array " + str(index) + "$"
            groupMade = False
            f.write("Array " + arrayName + "\n")
            elements = line.strip().split(",")
            if (elements[0].startswith(("'",'"',"$"))):
                arrayDisplayName = "$" + elements[0].strip("$'\"") + "$"
                elements = elements[1:]
            elementNames = []
            length = len(elements)
            for e in elements:
                elementNames.append("g" + str(elIndex))
                elIndex += 1
            for name in elementNames:
                f.write("Element " + name + "\n")
            for e in range(length):
                elName = elementNames[e]
                f.write("inArray(" + elName + "," + arrayName + "," + str(e) + ")\n")
            for e in range(length):
                elName = elementNames[e]
                currEl = elements[e]
                if "^" in currEl:
                    currEl = currEl.replace("^", "")
                    if groupMade == False:
                        f.write("Group p" + str(index) + "\n")
                        groupMade = True
                    f.write("inGroup(" + elName + ",p" + str(index) + ")\n") 
                if "*" in currEl:
                    currEl = currEl.replace("*", "")
                    f.write("highlight(" + elName + ")\n")
            for e in range(length):
                elName = elementNames[e]
                elData = elements[e].replace("^", "").replace("*", "")
                f.write("Label " + elName + " $" + elData + "$\n")
            
            f.write("Label " + arrayName + " " + arrayDisplayName + "\n\n")
            index += 1

def main():
    parser = ArgumentParser(description="Penrose Array diagram substance helper")
    parser.add_argument("-input_file", "-i", default='input.txt', help="Input array text file to read from. Default is 'input.txt'.")
    parser.add_argument("-output_file", "-o", default='array.substance', help="Custom output substance filename. Default is 'array.substance'.")
    parsed = parser.parse_args()
    flags = {}
    flags.update(input = parsed.input_file)
    flags.update(output = parsed.output_file)
    substance_input = open(flags["input"], "r")
    parse_input_and_write(substance_input,flags["output"])
    
    
    
   

if __name__ == '__main__':
   main()