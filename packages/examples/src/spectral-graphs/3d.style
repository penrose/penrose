canvas {
  width = 400
  height = 400
}

colors {
  scalar hue = ?
  color background = hsva(hue, 80, 40, 1)
  color bloom = hsva(hue, 50, 80, .6)
  color center = hsva(hue, 0, 100, 1)
  color edge = hsva(hue, 20, 90, 0.5)
  color black = #000000ff
}

global {
  shape background = Rectangle {
    center: (0,0)
    width: canvas.width
    height: canvas.height
    fillColor: colors.background
  }
  shape shade = Circle {
    center: (0,0)
    r: canvas.width / 2
    fillColor: colors.black
    style: "filter:blur(50px);"
  }
  shade above background
}

forall Node n {
    vec2 n.center = (?, ?, ?)
    scalar n.normsq = normsq(n.center)
    shape n.icon = Circle {
        center: (n.center[0], n.center[1])
        r: 4 + n.center[2] / 40
        fillColor: colors.bloom
        style: "filter:blur(1.8px);"
    }
    shape n.icon2 = Circle {
        center: (n.center[0], n.center[1])
        r: 0.5 * (4 + n.center[2] / 40)
        fillColor: colors.center
        style: "filter:blur(0.4px);"
    }
    n.icon2 above n.icon
}

forall Edge e; Node a; Node b
where e := MakeEdge(a, b) {
    scalar e.distsq = vdistsq(a.center, b.center)
    scalar e.z = 0.5 * (a.center[2] + b.center[2])
    shape e.icon = Line {
        start: a.icon.center
        end: b.icon.center
        strokeWidth: 0.5 * (3 + e.z / 60)
        strokeColor: colors.edge
        style: "filter:blur(0.3px);"
    }
}

forall Node n; Edge e {
    e.icon below n.icon
}

collect Node n into nodes {
    normsqs = listof normsq from nodes
    centers = listof center from nodes
    scalar scale = (canvas.width / 5) * (canvas.height / 5)
    ensure sum(normsqs) / count(normsqs) == scale
    ensure norm(sumVectors(centers)) == 0
}

collect Edge e into edges
where e := MakeEdge(a, b)
foreach Node a; Node b {
    distsqs = listof distsq from edges
    encourage sum(distsqs) == 0
}