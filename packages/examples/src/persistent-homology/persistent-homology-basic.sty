canvas {
  width = 800
  height = 700
}

forall Frames f {
  f.d = ?
  f.r1 = ?
  f.r2 = ?
  f.r3 = ?
  ensure lessThan(200, f.d)
  ensure lessThan(f.d, 400)
  ensure lessThan(3, f.r1)
  ensure lessThan(f.r1, f.r2)
  ensure lessThan(10, f.r2)
  ensure lessThan(f.r2, f.r3)
  ensure lessThan(30, f.r3)
}

forall Point p {
  p.x = ?
  p.y = ?
  p.d = ?
  p.r1 = ?
  p.r2 = ?
  p.r3 = ?

  p.dot1 = Circle {
    center: (p.x - p.d, p.y)
    r: 3
    fillColor: rgba(0.0, 0.0, 0.0, 1.0)
  }
  p.dot2 = Circle {
    center: (p.x, p.y)
    r: 3
    fillColor: rgba(0.0, 0.0, 0.0, 1.0)
  }
  p.dot3 = Circle {
    center: (p.x + p.d, p.y)
    r: 3
    fillColor: rgba(0.0, 0.0, 0.0, 1.0)
  }
  p.circle1 = Circle {
    center: (p.x - p.d, p.y)
    r: p.r1
    fillColor: rgba(0.2, 0.2, 1.0, 0.3)
  }
  p.circle2 = Circle {
    center: (p.x, p.y)
    r: p.r2
    fillColor: rgba(0.2, 0.2, 1.0, 0.3)
  }
  p.circle3 = Circle {
    center: (p.x + p.d, p.y)
    r: p.r3
    fillColor: rgba(0.2, 0.2, 1.0, 0.3)
  }
  p.dot1 above p.circle1
  p.dot2 above p.circle2
  p.dot3 above p.circle3

}

forall Point p; Frames f {
  ensure equal(p.d, f.d)
  ensure equal(p.r1, f.r1)
  ensure equal(p.r2, f.r2)
  ensure equal(p.r3, f.r3)
}

forall Point p1; Point p2 {
  ensure lessThan(abs(p1.x - p2.x) + 150.0, p1.d)
}

forall Point p1; Point p2 
where ConnectedOnFrame1(p1, p2) {
  ensure overlapping(p1.circle1, p2.circle1, -7)
}

forall Point p1; Point p2 
where ConnectedOnFrame2(p1, p2) {
  ensure overlapping(p1.circle2, p2.circle2, -7)
}

forall Point p1; Point p2 
where ConnectedOnFrame3(p1, p2) {
  ensure overlapping(p1.circle3, p2.circle3, -7)
}

forall Point p1; Point p2 
where NotConnectedOnFrame1(p1, p2) {
  ensure disjoint(p1.circle1, p2.circle1, 10)
}

forall Point p1; Point p2 
where NotConnectedOnFrame2(p1, p2) {
  ensure disjoint(p1.circle2, p2.circle2, 10)
}

forall Point p1; Point p2 
where NotConnectedOnFrame3(p1, p2) {
  ensure disjoint(p1.circle3, p2.circle3, 10)
}

forall Connection c; Point p1; Point p2
where c := MakeConnection1(p1, p2) {
  c.line = Line {
    start: p1.dot1.center
    end: p2.dot1.center
    strokeColor: rgba(0.0, 0.0, 0.0, 1.0)
    strokeWidth: 3
  }
}

forall Connection c; Point p1; Point p2
where c := MakeConnection2(p1, p2) {
  c.line = Line {
    start: p1.dot2.center
    end: p2.dot2.center
    strokeColor: rgba(0.0, 0.0, 0.0, 1.0)
    strokeWidth: 3
  }
}

forall Connection c; Point p1; Point p2
where c := MakeConnection3(p1, p2) {
  c.line = Line {
    start: p1.dot3.center
    end: p2.dot3.center
    strokeColor: rgba(0.0, 0.0, 0.0, 1.0)
    strokeWidth: 3
  }
}
