name: Build
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: false # TODO: eliminate warnings so we don't have to do this
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # https://github.com/lerna/lerna/issues/1893#issuecomment-770614785
          fetch-depth: 0
      - name: Install packages
        uses: ./.github/actions/packages
      - name: Typecheck all packages
        run: yarn typecheck
      - name: Run all builds
        run: yarn build
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: Authenticate with registry
        run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: Publish canary release
        run: yarn publish:canary --yes

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install packages
        uses: ./.github/actions/packages
      - name: Format
        run: |
          if ! yarn format:check; then
            echo
            echo 'Run this command from the repository root:'
            echo
            echo '    yarn format'
            echo
            echo 'Then commit and push to re-run CI.'
            echo
            false
          fi

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install packages
        uses: ./.github/actions/packages
      - name: Lint
        run: yarn lint

  readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install packages
        uses: ./.github/actions/packages
      - name: Regenerate CONTRIBUTING.md table of contents
        run: yarn toc
      - name: Build @penrose/automator
        run: yarn build:automator
      - name: Regenerate example diagram and README.md
        run: .github/gen_readme.js
      - name: Check whether anything changed
        run: |
          CHANGES=$(git status --porcelain)
          echo "$CHANGES"
          git diff
          [ -z "$CHANGES" ]

  registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install packages
        uses: ./.github/actions/packages
      - name: Build @penrose/automator
        run: yarn build:automator
      - name: Generate diagrams and metadata
        working-directory: packages/automator/
        run: yarn start batch registry.json out/ --src-prefix=../examples/src/ --folders
      - name: Upload generated diagrams and metadata
        uses: actions/upload-artifact@v2
        with:
          name: diagrams
          path: packages/automator/out/
      - name: Checkout target
        uses: actions/checkout@v3
        with:
          path: diagrams/
          ref: ci/refs/heads/main
      - if: github.event_name == 'pull_request'
        name: Checkout target branch
        working-directory: diagrams/
        run: git checkout -b ci/${{ github.ref }}
      - name: Clean target working tree
        working-directory: diagrams/
        run: git rm -rf .
      - name: Copy diagrams to target
        run: |
          set -x
          for filename in packages/automator/out/*/output.svg; do
            dir=${filename#packages/automator/out/}
            name=${dir%/output.svg}
            cp "$filename" "diagrams/$name.svg"
          done
      - name: Commit diagrams and generate diff summary
        working-directory: diagrams/
        run: |
          set -x

          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --global user.name "$GITHUB_ACTOR"

          git add .
          git commit --allow-empty -m 'CI for ${{ github.event.pull_request.head.sha || github.sha }}'

          echo '```' > diff.md
          git --no-pager diff --name-status ci/refs/heads/main HEAD >> diff.md
          echo '```' >> diff.md

          echo '# Â± Registry diff' >> $GITHUB_STEP_SUMMARY
          echo >> $GITHUB_STEP_SUMMARY
          cat diff.md >> $GITHUB_STEP_SUMMARY
          echo >> $GITHUB_STEP_SUMMARY

          echo 'REGISTRY_DIFF<<EOF' >> $GITHUB_ENV
          cat diff.md >> $GITHUB_ENV
          echo EOF >> $GITHUB_ENV

          rm diff.md
      - name: Generate performance summary
        working-directory: packages/automator/
        run: |
          set -x

          yarn start textchart out stats.md

          echo '# ðŸ“Š Performance' >> $GITHUB_STEP_SUMMARY
          echo >> $GITHUB_STEP_SUMMARY
          cat stats.md >> $GITHUB_STEP_SUMMARY

          echo 'REGISTRY_STATS<<EOF' >> $GITHUB_ENV
          cat stats.md >> $GITHUB_ENV
          echo EOF >> $GITHUB_ENV

          rm stats.md
      - if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'penrose/penrose'
        name: Push to target
        working-directory: diagrams/
        run: git push -f origin HEAD
      - if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == 'penrose/penrose'
        name: Comment on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            # Â± [Registry diff](${{ github.server_url }}/${{ github.repository }}/compare/ci/refs/heads/main..ci/${{ github.ref }})

            ${{ env.REGISTRY_DIFF }}

            # ðŸ“Š [Performance](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ${{ env.REGISTRY_STATS }}

  storybook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install packages
        uses: ./.github/actions/packages
      - name: Build storybook
        run: npx nx run components:build-storybook
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: packages/components/storybook-static
          target-folder: storybook/
      - name: Add .nojekyll
        run: |
          mkdir extra/
          touch extra/.nojekyll
        working-directory: packages/components/
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: Deploy .nojekyll
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: packages/components/extra/
          clean: false

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install packages
        uses: ./.github/actions/packages
      - name: Make test report dir
        run: mkdir -p reports/junit/
        working-directory: packages/core/
      - name: Run core tests and generate test data
        run: npx nx run core:coverage
      - name: Move test report
        run: mv junit.xml reports/junit/
        working-directory: packages/core/
      - name: Upload coverage report to codecov
        uses: codecov/codecov-action@v3
      # TODO: some equivalent of CircleCI's store_test_results
      # with path: packages/core/reports/junit/
      - uses: actions/upload-artifact@v2
        with:
          name: junit
          path: packages/core/reports/junit/
      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: packages/core/coverage/

  typedocs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install packages
        uses: ./.github/actions/packages
      - name: Build docs
        run: yarn docs
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: packages/core/docs/
          target-folder: typedoc
      - name: Add .nojekyll
        run: |
          mkdir extra/
          touch extra/.nojekyll
        working-directory: packages/core/
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: Deploy .nojekyll
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: packages/core/extra/
          clean: false
