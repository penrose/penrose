name: Build
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: ./.github/actions/setup
      - name: Typecheck all packages
        run: yarn typecheck
      - name: Run all builds
        run: yarn build

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: ./.github/actions/setup
      - name: Format
        run: |
          if ! yarn format:check; then
            echo
            echo 'Run this command from the repository root:'
            echo
            echo '    yarn format'
            echo
            echo 'Then commit and push to re-run CI.'
            echo
            false
          fi

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: ./.github/actions/setup
      - name: Lint
        run: yarn lint

  readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: ./.github/actions/setup
      - name: Regenerate CONTRIBUTING.md table of contents
        run: yarn toc
      - name: Build @penrose/roger
        run: yarn build:roger
      - name: Link @penrose/roger
        working-directory: packages/roger/
        run: npm link
      - name: Regenerate example diagram and README.md
        run: .github/gen_readme.js
      - name: Check whether anything changed
        run: |
          CHANGES=$(git status --porcelain)
          echo "$CHANGES"
          git diff
          [ -z "$CHANGES" ]

  registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: ./.github/actions/setup
      - name: Checkout target
        uses: actions/checkout@v3
        with:
          path: packages/examples/diagrams/
          ref: ci/refs/heads/main
      - if: github.event_name == 'pull_request'
        name: Checkout target branch
        working-directory: packages/examples/diagrams/
        run: git checkout -b ci/${{ github.ref }}
      - name: Clean target working tree
        working-directory: packages/examples/diagrams/
        run: git rm -rf .
      - name: Generate diagrams and metadata
        run: yarn registry
      - name: Upload generated diagrams and metadata
        uses: actions/upload-artifact@v4
        with:
          name: diagrams
          path: |
            packages/examples/diagrams
            !packages/examples/diagrams/.git
      - name: Record performance summary
        working-directory: packages/examples/diagrams/
        run: |
          set -x

          echo '# ðŸ“Š Performance' >> $GITHUB_STEP_SUMMARY
          echo >> $GITHUB_STEP_SUMMARY
          cat stats.md >> $GITHUB_STEP_SUMMARY

          echo 'REGISTRY_STATS<<EOF' >> $GITHUB_ENV
          cat stats.md >> $GITHUB_ENV
          echo EOF >> $GITHUB_ENV

          rm data.json stats.md
      - name: Commit diagrams and generate diff summary
        id: commit
        working-directory: packages/examples/diagrams/
        run: |
          set -x

          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --global user.name "$GITHUB_ACTOR"

          git add .
          git commit --allow-empty -m 'CI for ${{ github.event.pull_request.head.sha || github.sha }}'
          echo "CI_COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

          echo '```' > diff.md
          git --no-pager diff --name-status ci/refs/heads/main HEAD >> diff.md
          echo '```' >> diff.md

          echo '# Â± Registry diff' >> $GITHUB_STEP_SUMMARY
          echo >> $GITHUB_STEP_SUMMARY
          cat diff.md >> $GITHUB_STEP_SUMMARY
          echo >> $GITHUB_STEP_SUMMARY

          echo 'REGISTRY_DIFF<<EOF' >> $GITHUB_ENV
          cat diff.md >> $GITHUB_ENV
          echo EOF >> $GITHUB_ENV

          rm diff.md
      - name: Check for write permissions
        id: check
        uses: scherermichael-oss/action-has-permission@17f29510f1bf987b916c8cbb451566a56eed23f1
        with:
          required-permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: steps.check.outputs.has-permission
        name: Push to target
        working-directory: packages/examples/diagrams/
        run: git push -f origin HEAD
      - if: github.event_name == 'pull_request' && steps.check.outputs.has-permission
        name: Comment on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            # Â± [Registry diff](${{ github.server_url }}/${{ github.repository }}/commit/${{ steps.commit.outputs.CI_COMMIT_SHA }})

            ${{ env.REGISTRY_DIFF }}

            # ðŸ“Š [Performance](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ${{ env.REGISTRY_STATS }}

  storybook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: ./.github/actions/setup
      - name: Build storybook
        run: npx nx run components:build-storybook
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: packages/components/storybook-static
          target-folder: storybook/
      - name: Add .nojekyll
        run: |
          mkdir extra/
          touch extra/.nojekyll
        working-directory: packages/components/
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: Deploy .nojekyll
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: packages/components/extra/
          clean: false

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: ./.github/actions/setup
      - name: Run all tests
        run: yarn nx run-many -t test -p core components --verbose

  typedocs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: ./.github/actions/setup
      - name: Build docs
        run: yarn docs
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: packages/core/docs/
          target-folder: typedoc
      - name: Add .nojekyll
        run: |
          mkdir extra/
          touch extra/.nojekyll
        working-directory: packages/core/
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: Deploy .nojekyll
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: packages/core/extra/
          clean: false
