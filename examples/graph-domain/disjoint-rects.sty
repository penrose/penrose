-- Get all boxes disjoint from each other.

canvas {
  width = 800
  height = 700
}

Colors {
    Colors.black = rgba(0.0, 0.0, 0.0, 1.0)
    Colors.gray = rgba(0.8, 0.8, 0.8, 1.0)
    Colors.red = rgba(1.0, 0.0, 0.0, 1.0)
    Colors.pink = rgba(1.0, 0.4, 0.7, 1.0)
    Colors.yellow = rgba(1.0, 1.0, 0.0, 1.0)
    Colors.orange = rgba(1.0, 0.6, 0.0, 1.0)
    Colors.green = rgba(0.0, 1.0, 0.0, 1.0)
    Colors.blue = rgba(0.0, 0.0, 1.0, 1.0)
    Colors.sky = rgba(0.325, 0.718, 0.769, 1.0)
    Colors.cyan = rgba(0.0, 1.0, 1.0, 1.0)
    Colors.purple = rgba(0.5, 0.0, 0.5, 1.0)
    Colors.white = rgba(1.0, 1.0, 1.0, 1.0)
    Colors.none = none()
}

global {
    global.padding = 20.0
    global.stroke = 2.0
    global.width = 600.
    global.box = Rectangle {
               center: (0., 0.)
               width: global.width + 300.
               height: global.width
               fillColor: Colors.none
               strokeColor: Colors.black
    }
    global.vertexWidth = 100.
}

Vertex V {
       V.x = ?
       V.y = ?

       V.xpad = 0.
       V.ypad = 60.

       V.shape = Rectangle { 
         center: (V.x, V.y)
         width: global.vertexWidth + V.xpad
         height: global.vertexWidth + V.ypad
         fillColor : Colors.none
         strokeWidth : 2.
         strokeColor: Colors.black
       }

       V.text = Equation {
	 center: V.shape.center
	 string : V.label
	 fillColor : Colors.black
       }

       ensure contains(global.box, V.shape)

       V.text above V.shape
       V.shape above global.box
}

Vertex `v1` {
       override `v1`.shape.width = 500.
}

-- This is applied to each pair twice (as (a,b) then (b,a))
Vertex v1; Vertex v2 {
       ensure disjoint(v1.shape, v2.shape, 0.)
}
